1) Escreva um programa que mostre o tamanho em byte que cada tipo de dados
ocupa na memória: char, int, float, double.

2) Crie uma estrutura representando um aluno de uma disciplina. Essa estrutura
deve conter o número de matrícula do aluno, seu nome e as notas de três provas.
Escreva um programa que mostre o tamanho em byte dessa estrutura.

3) Crie uma estrutura chamada Cadastro. Essa estrutura deve conter o nome, a idade
e o endereço de uma pessoa. Agora, escreva uma função que receba um inteiro
positivo N e retorne o ponteiro para um vetor de tamanho N, alocado
dinamicamente, dessa estrutura. Solicite também que o usuário digite os dados
desse vetor dentro da função.

4) Faça um programa que leia um valor inteiro N não negativo. Se o valor de N for
inválido, o usuário deverá digitar outro até que ele seja válido (ou seja, positivo).
Em seguida, leia um vetor V contendo N posições de inteiros, em que cada valor
deverá ser maior ou igual a 2. Esse vetor deverá ser alocado dinamicamente.

5) Escreva um programa que aloque dinamicamente uma matriz de inteiros. As
dimensões da matriz deverão ser lidas do usuário. Em seguida, escreva uma função
que receba um valor e retorne 1, caso o valor esteja na matriz, ou retorne 0, no
caso contrário

6) Faça uma função que retorne o ponteiro para um vetor de N elementos inteiros
alocados dinamicamente. O array deve ser preenchido com valores de 0 a N − 1.

7) Escreva uma função que receba um valor inteiro positivo N por parâmetro e
retorne o ponteiro para um vetor de tamanho N alocado dinamicamente. Se N for
negativo ou igual a zero, um ponteiro nulo deverá ser retornado.

8) Crie uma função que receba uma string e retorne o ponteiro para essa string
invertida.

9) Escreva uma função que receba como parâmetro um valor N e retorne o ponteiro
para uma matriz alocada dinamicamente contendo N linhas e N colunas. Essa matriz
deve conter o valor 1 na diagonal principal e 0 nas demais posições.

10) Escreva uma função que receba como parâmetro um valor N e retorne o ponteiro
para uma matriz alocada dinamicamente contendo N linhas e N colunas. Essa matriz
deve conter o valor 1 na diagonal secundária e 0 nas demais posições.

11) Escreva um programa que leia um inteiro N e crie uma matriz alocada
dinamicamente contendo N linhas e N colunas. Essa matriz deve conter o valor 0
na diagonal principal, o valor 1 nos elementos acima da diagonal principal e o
valor −1 nos elementos abaixo da diagonal principal.

12) Escreva uma função que receba como parâmetro dois vetores, A e B, de tamanho
N cada. A função deve retornar o ponteiro para um vetor C de tamanho N alocado
dinamicamente, em que C[i] = A[i] + B[i].

13) Escreva uma função que receba como parâmetro uma matriz A contendo N linhas
e N colunas, e um vetor B de tamanho N. A função deve retornar o ponteiro para
um vetor C de tamanho N alocado dinamicamente, em que C é o produto da matriz A
pelo vetor B.

14) Escreva uma função que receba como parâmetro uma matriz A contendo N linhas
e N colunas. A função deve retornar o ponteiro para um vetor B de tamanho N
alocado dinamicamente, em que cada posição de B é a soma dos números daquela
coluna da matriz.

15) Escreva uma função que receba como parâmetro duas matrizes, A e B, e seus
tamanhos. A função deve retornar o ponteiro para uma matriz C, em que C é o
produto da multiplicação da matriz A pela matriz B. Se a multiplicação das matri-
zes não for possível, retorne um ponteiro nulo.
